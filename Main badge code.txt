<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Stork Community ID Badge Generator</title>
  <style>
    body { font-family: Arial, sans-serif; background: #f0f0f0; padding: 20px; }
    form { max-width: 400px; margin: 0 auto; }
    input, button { display: block; width: 100%; margin: 10px 0; padding: 8px; }
    canvas { display: block; margin: 20px auto; border: 1px solid #ccc; }
    #download { text-align: center; }
  </style>
</head>
<body>
  <h1>Stork Community ID Badge Generator</h1>
  <form id="badgeForm">
    <label for="xHandle">X Handle (e.g., @RielRevs):</label>
    <input type="text" id="xHandle" placeholder="@YourHandle" required>

    <label for="aka">Nickname (A.k.a):</label>
    <input type="text" id="aka" placeholder="e.g. The Stork King">

    <label for="discordRole">Discord Role (e.g., Content Creator):</label>
    <input type="text" id="discordRole" placeholder="Your Role" required>

    <label for="pfp">Profile Picture (Upload or URL):</label>
    <input type="file" id="pfpFile" accept="image/*">
    <input type="text" id="pfpUrl" placeholder="Or enter image URL (e.g., your X PFP link)">

    <button type="submit">Generate Badge</button>
  </form>

  <canvas id="badgeCanvas" width="800" height="400"></canvas>
  <div id="download"></div>

  <script>
    const form = document.getElementById('badgeForm');
    const canvas = document.getElementById('badgeCanvas');
    const ctx = canvas.getContext('2d');

    function loadImage(src) {
      return new Promise((resolve, reject) => {
        const img = new Image();
        img.src = src;
        img.onload = () => resolve(img);
        img.onerror = reject;
      });
    }

    form.addEventListener('submit', async (e) => {
      e.preventDefault();
      const xHandle = document.getElementById('xHandle').value;
      const aka = document.getElementById('aka').value;
      const discordRole = document.getElementById('discordRole').value;
      let pfpSrc = document.getElementById('pfpUrl').value;

      // If file uploaded, read as data URL
      const pfpFile = document.getElementById('pfpFile').files[0];
      if (pfpFile) {
        pfpSrc = await new Promise(resolve => {
          const reader = new FileReader();
          reader.onload = (e) => resolve(e.target.result);
          reader.readAsDataURL(pfpFile);
        });
      }

      // Load PFP image if provided
      let pfpImage = null;
      if (pfpSrc) {
        try {
          pfpImage = await loadImage(pfpSrc);
        } catch (error) {
          console.error('Failed to load PFP:', error);
          alert('Invalid PFP URL or file. Please try again.');
          return;
        }
      }

      // Load logo (from repo file)
      let logoImage = null;
      try {
        logoImage = await loadImage('stork-logo.png');
      } catch (error) {
        console.error('Failed to load logo:', error);
      }

      // Clear canvas
      ctx.clearRect(0, 0, canvas.width, canvas.height);

      // Draw front side (left)
      drawCard(0, xHandle.replace('@', ''), aka, discordRole, pfpImage, logoImage, 'front');

      // Draw back side (right)
      drawCard(400, xHandle, aka, discordRole, null, logoImage, 'back');

      // Add download link
      const downloadDiv = document.getElementById('download');
      downloadDiv.innerHTML = '<a href="' + canvas.toDataURL('image/png') + '" download="stork-badge.png">Download Your Badge</a>';
    });

    function drawCard(xOffset, name, aka, subtitle, pfpImage, logoImage, side) {
      // Card background (black)
      ctx.fillStyle = '#000000';
      ctx.fillRect(xOffset + 50, 50, 300, 300);
      ctx.beginPath();
      ctx.moveTo(xOffset + 50, 50);
      ctx.lineTo(xOffset + 350, 50);
      ctx.lineTo(xOffset + 350, 350);
      ctx.lineTo(xOffset + 50, 350);
      ctx.closePath();
      ctx.strokeStyle = '#A5F8FF'; // Light cyan border
      ctx.lineWidth = 2;
      ctx.stroke();

      // Lanyard clip (simplified)
      ctx.fillStyle = '#001F3F'; // Dark navy
      ctx.fillRect(xOffset + 150, 20, 100, 30);

      if (side === 'front') {
        // Name
        ctx.fillStyle = '#A5F8FF';
        ctx.font = 'bold 24px Arial';
        ctx.fillText(name, xOffset + 70, 120);

        // Aka
        if (aka) {
          ctx.fillStyle = '#FFFFFF';
          ctx.font = '16px Arial';
          ctx.fillText(`A.k.a ${aka}`, xOffset + 70, 150);
        }

        // Discord Role
        ctx.fillStyle = '#FFFFFF';
        ctx.font = '16px Arial';
        ctx.fillText(subtitle, xOffset + 70, 180);

        // PFP
        if (pfpImage) {
          ctx.drawImage(pfpImage, xOffset + 100, 200, 100, 100);
        }

        // Arrow icon
        ctx.fillStyle = '#A5F8FF';
        ctx.font = '30px Arial';
        ctx.fillText('â†’', xOffset + 280, 120);

        // Logo
        if (logoImage) {
          ctx.drawImage(logoImage, xOffset + 220, 280, 80, 40);
        }
      } else {
        // Back side triangle accent
        const gradient = ctx.createLinearGradient(xOffset + 300, 100, xOffset + 350, 200);
        gradient.addColorStop(0, '#A5F8FF');
        gradient.addColorStop(1, '#001F3F');
        ctx.beginPath();
        ctx.moveTo(xOffset + 300, 100);
        ctx.lineTo(xOffset + 350, 150);
        ctx.lineTo(xOffset + 300, 200);
        ctx.closePath();
        ctx.fillStyle = gradient;
        ctx.fill();

        // X Handle
        ctx.fillStyle = '#FFFFFF';
        ctx.font = '16px Arial';
        ctx.fillText(`X ${name}`, xOffset + 70, 120);

        // Aka
        if (aka) {
          ctx.fillText(`A.k.a ${aka}`, xOffset + 70, 150);
        }

        // Discord Role
        ctx.fillText(subtitle, xOffset + 70, 180);

        // Barcode
        ctx.fillStyle = '#FFFFFF';
        for (let i = 0; i < 10; i++) {
          ctx.fillRect(xOffset + 80 + i * 15, 220, 5 + (i % 3) * 5, 60);
        }

        // Logo
        if (logoImage) {
          ctx.drawImage(logoImage, xOffset + 220, 280, 80, 40);
        }
      }
    }
  </script>
</body>
</html>